{"title":"實時環境光照：環境光照與預計算 環境光與Split Sum、PRT","uid":"a200d86f4537c56fcd6e406543954493","slug":"GraphicQuest/GQ012 實時渲染3 實時環境光照：環境光照與預計算 環境光與Split Sum、PRT","date":"2022-12-15T02:51:05.874Z","updated":"2022-12-14T14:53:28.268Z","comments":true,"path":"api/articles/GraphicQuest/GQ012 實時渲染3 實時環境光照：環境光照與預計算 環境光與Split Sum、PRT.json","keywords":null,"cover":"https://cdn.discordapp.com/attachments/1032335453988335676/1051706475367632926/FjryRYHUUAEbZPt.png","content":"<h1 id=\"實時環境光照：環境光照與預計算-環境光與Split-Sum、PRT\"><a href=\"#實時環境光照：環境光照與預計算-環境光與Split-Sum、PRT\" class=\"headerlink\" title=\"實時環境光照：環境光照與預計算 環境光與Split Sum、PRT\"></a>實時環境光照：環境光照與預計算 環境光與Split Sum、PRT</h1><h2 id=\"1-環境映射-Environment-Mapping\"><a href=\"#1-環境映射-Environment-Mapping\" class=\"headerlink\" title=\"1 環境映射 Environment Mapping\"></a>1 環境映射 Environment Mapping</h2><p>在《Real-Time Rendering 3rd》第八章 : Area and Environmental Lighting 中，介紹了 Environment Mapping (環境映射)</p>\n<p>Environment mapping（環境映射），又稱Reflection Mapping（反射映射）,是計算機圖形學領域中使用基於圖像的光照（Image-Based Lighting，IBL）技術，用預先計算的紋理圖像模擬複雜鏡面的一種高效方法。</p>\n<p>環境映射將周圍環境與光照通過直接投影而簡化表示為紋理，保存的環境光照在繪製時假設來自無窮遠處，得到的環境光照圖常是球體圖（spherical map）或立方體圖（cube map）。</p>\n<p>球體圖（spherical map）及立方體圖（cube map）示意 圖源：[GAMES202 閆令琪]<br><img src=\"https://pic4.zhimg.com/v2-b5aee79979012a34e485bafb8b6f7ac7_r.jpg\"></p>\n<p>由於是事先準備好的數據，這種實現方法比傳統的光線跟踪算法效率更高，但是需要注意的是這種方法是實際反射的一種近似，有時甚至是非常粗糙的近似。這種技術的一個典型的缺點是沒有考慮自反射，即無法看到物體反射的物體自身的某一部分。</p>\n<h2 id=\"1-1-IBL（Image-Based-Lighting）\"><a href=\"#1-1-IBL（Image-Based-Lighting）\" class=\"headerlink\" title=\"1.1 IBL（Image-Based Lighting）\"></a>1.1 IBL（Image-Based Lighting）</h2><p>IBL（Image-Based Lighting）是指根據環境光照圖，在不考慮可見性 V(p,ωi) 的條件下直接著色給定點 p 的技術，相應的繪製方程如下：</p>\n<p>$$<br>\\begin{align} L_o \\left( p ,, \\omega_o \\right)  &amp;&#x3D; \\int_{\\Omega^{+}} L_{i} \\left( p ,, \\omega_i \\right) f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right) \\cos\\theta_i \\cancel{ V\\left(p,,\\omega_i\\right) } \\mathrm{d}\\omega_i \\end{align} \\<br>$$</p>\n<p>為了求解繪製積分，可以使用蒙特卡羅方法抽樣環境光入射方向進行近似，但是為了讓蒙特卡羅方法收斂，可能需要抽樣大量的環境光入射方向樣本，這將耗費大量的計算資源，</p>\n<h1 id=\"2-The-Split-Sum-Approximation\"><a href=\"#2-The-Split-Sum-Approximation\" class=\"headerlink\" title=\"2 The Split Sum Approximation\"></a>2 The Split Sum Approximation</h1><p>簡單理解:</p>\n<ul>\n<li>放棄原渲染方程的visibility項</li>\n<li>著色點的lighting項就變成了環境光的lighting</li>\n</ul>\n<p>在實時渲染中存在如下重要的估算定積分方法，將兩個函數乘積的定積分拆解成兩個函數定積分的乘積：</p>\n<p>$$<br>\\begin{align}<br>\\int_{\\Omega} f(x) g(x), \\mathrm{d}x<br>\\end{align}<br>$$</p>\n<p>$$<br>\\begin{align}<br>\\approx \\frac{\\int_{\\Omega} f(x),\\mathrm{d}x}{\\int_{\\Omega}\\mathrm{d}x} \\cdot \\int_{\\Omega} g(x),\\mathrm{d}x \\<br>\\end{align}<br>$$</p>\n<ul>\n<li>假如被積函數較為平滑（例如漫反射材質的 BRDF），或者支撐集較小（例如光源相對不多時直接採樣光源所用的可見性函數），則在實時渲染中認為該估計基本成立；</li>\n</ul>\n<p>為了避免抽樣估計定積分，分離求和方法（The Split Sum）認為 BRDF 在求解定積分時可以被拆解出來，於是繪製方程變成瞭如下形式：</p>\n<p>$$<br>\\begin{align} L_o \\left( p ,, \\omega_o \\right) &amp;&#x3D; \\int_{\\Omega^{+}} L_{i} \\left( p ,, \\omega_i \\right) f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right) \\cos\\theta_i \\mathrm{d}\\omega_i \\ &amp;\\approx \\frac{\\int_{\\Omega^{+}} L_{i} \\left( p ,, \\omega_i \\right) , \\mathrm{d} \\omega_i }{\\int_{\\Omega^{+}}\\mathrm{d}\\omega_i } \\int_{\\Omega^{+}}  f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right) \\cos\\theta_i \\mathrm{d}\\omega_i \\end{align} \\<br>$$</p>\n<p>漫反射材質 BRDF 較為平滑，而對於那些不怎麼平滑的有光澤材質 BRDF，支撐集又一般較小，於是可以得到不錯的近似結果。</p>\n<p>另外，該方法之所以被稱為拆解求和（split sum）而不是拆解積分，是因為方法的提出者把積分寫成了求和形式</p>\n<p>$$<br>\\frac{1}{N} \\sum_{k&#x3D;1}^{N} \\frac{  L_{i} \\left( p ,, \\omega_i \\right) f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right) \\cos\\theta_i }{ \\mathrm{pdf}\\left( p ,, w_i\\right) } \\approx \\left( \\frac{1}{N} \\sum_{k&#x3D;1}^{N}  L_{i} \\left( p ,, \\omega_i \\right) \\right) \\left( \\frac{1}{N} \\sum_{k&#x3D;1}^{N} \\frac{ f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right) \\cos\\theta_i }{ \\mathrm{pdf}\\left( p ,, w_i\\right) } \\right) \\<br>$$</p>\n<h2 id=\"2-1-The-Split-Sum-第一部分積分\"><a href=\"#2-1-The-Split-Sum-第一部分積分\" class=\"headerlink\" title=\"2.1 The Split Sum 第一部分積分\"></a>2.1 The Split Sum 第一部分積分</h2><p>我們先來處理這一部分的積分: $\\frac{\\int_{\\Omega^{+}} L_{i} \\left( p ,, \\omega_i \\right),\\mathrm{d}\\omega_i }{\\int_{\\Omega^{+}} \\mathrm{d}\\omega_i }$</p>\n<p>$\\frac{\\int_{\\Omega^{+}} L_{i} \\left( p ,, \\omega_i \\right),\\mathrm{d}\\omega_i }{\\int_{\\Omega^{+}} \\mathrm{d}\\omega_i }$，它相當於對環境光照圖施加了均值濾波，而濾波卷積核的尺寸取決於 BRDF 的支撐集。</p>\n<p>於是，當著色給定點時，根據理想鏡面反射方向查詢預濾波後的環境光照圖，就相當於同時查詢了以理想鏡面反射方向為中心的區域內的環境光照，便不需要抽樣了</p>\n<p>查詢一次濾波後結果，相當於查詢多次沒有濾波的結果 圖源：[GAMES202 閆令琪]</p>\n<p><img src=\"/project/pic/v2-99de43002c8588e8b2db5c99824c808d_r.jpg\"></p>\n<p>不同尺寸的濾波卷積核，預計算環境光照圖的圖像金字塔(mipmap)；在著色時，根據 BRDF 得到合適的濾波卷積核的尺寸，可以方便地從相應的層級或通過三線性插值得到環境光</p>\n<p>使用不同尺寸的濾波卷積核預計算 MIPMAP 圖源：[GAMES202 閆令琪]</p>\n<p><img src=\"/project/pic/v2-87fdf1c20f299ba05eb3151c16d6d858_r.jpg\"></p>\n<h2 id=\"2-2-The-Split-Sum-第二部分積分\"><a href=\"#2-2-The-Split-Sum-第二部分積分\" class=\"headerlink\" title=\"2.2 The Split Sum 第二部分積分\"></a>2.2 The Split Sum 第二部分積分</h2><p>第二部分的積分: $\\int_{\\Omega^{+}}  f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right) \\cos\\theta_i \\mathrm{d}\\omega_i$</p>\n<p>可以根據所有可能的參數進行預計算，或者使用 LTC 方法（Linearly Transformed Cosines）。</p>\n<p>對於微表面模型的 BRDF，可以對菲涅爾項使用石里克近似（Schlick’s approximation）</p>\n<p>$$<br>F\\left(\\theta\\right) &#x3D; R_0 + \\left(1-R_0\\right) \\left(1-\\cos\\theta\\right)^5 \\<br>$$</p>\n<ul>\n<li>$R_0 &#x3D; \\left( \\frac{\\eta_1 - \\eta_2}{\\eta_1 + \\eta_2} \\right)^2$ 是基底顏色，其中 $\\eta_1$ 和 $\\eta_2$ 是著色點所處表面兩側介質的折射率；</li>\n<li>在實時渲染中，著色點出光線的入射角 $\\theta_i$、出射角 $\\theta_o$ 及兩者的半角被認為非常接近，於是此處簡單地用 $\\theta$ 描述光線方向</li>\n</ul>\n<p>然後，後一部分的定積分可以根據菲涅爾項進行拆解：</p>\n<p>$$<br>\\begin{align} \\int_{\\Omega^{+}}  f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right) \\cos\\theta_i \\mathrm{d}\\omega_i<br>\\end{align}<br>$$</p>\n<p>$$<br>\\begin{align}<br>\\approx \\int_{\\Omega^{+}}  \\frac{f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right)}{F\\left(\\theta_i\\right)} \\left[ R_0 + \\left(1-R_0\\right) \\left(1-\\cos\\theta_i\\right)^5 \\right] \\cos\\theta_i \\mathrm{d}\\omega_i<br>\\end{align}<br>$$</p>\n<p>$$<br>\\begin{align} &amp;&#x3D;  R_0 \\int_{\\Omega^{+}}  \\frac{f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right)}{F\\left(\\theta_i\\right)} \\left[ 1 - \\left(1-\\cos\\theta_i\\right)^5 \\right] \\cos\\theta_i \\mathrm{d}\\omega_i + \\int_{\\Omega^{+}}  \\frac{f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right)}{F\\left(\\theta_i\\right)}  \\left(1-\\cos\\theta_i\\right)^5  \\cos\\theta_i  \\mathrm{d}\\omega_i \\end{align}<br>$$</p>\n<p>於是定積分不再依賴於基底顏色 R0，在預計算 $\\frac{f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right)}{ F\\left(\\theta\\right)}$ 時只需要考慮粗糙程度和入射角的餘弦即可。</p>\n<h3 id=\"2-3-甚麼是-LTC-方法（Linearly-Transformed-Cosines）\"><a href=\"#2-3-甚麼是-LTC-方法（Linearly-Transformed-Cosines）\" class=\"headerlink\" title=\"2.3 甚麼是 LTC 方法（Linearly Transformed Cosines）?\"></a>2.3 甚麼是 LTC 方法（Linearly Transformed Cosines）?</h3><h3 id=\"2-4-甚麼是-石里克近似（Schlick’s-approximation）\"><a href=\"#2-4-甚麼是-石里克近似（Schlick’s-approximation）\" class=\"headerlink\" title=\"2.4 甚麼是 石里克近似（Schlick’s approximation）?\"></a>2.4 甚麼是 石里克近似（Schlick’s approximation）?</h3><h1 id=\"3-環境光照陰影\"><a href=\"#3-環境光照陰影\" class=\"headerlink\" title=\"3 環境光照陰影\"></a>3 環境光照陰影</h1><p>假如在著色時需要考慮環境光的可見性，則實現實時渲染是一個相當困難的問題。</p>\n<p>$$<br>\\underset{ \\text{給定點 $p$ 的著色給果} }{ \\underbrace{ L_o \\left( p ,, \\omega_o \\right) } } &#x3D; \\int_{\\Omega^{+}}  \\underset{ \\text{環境光照} }{ \\underbrace{ L_{i} \\left( p ,,\\omega_i \\right)  } } \\cdot \\underset{ \\text{ BRDF} }{ \\underbrace{ f_{r}\\left(  p ,,\\omega_i ,, \\omega_o \\right)  \\cos\\theta_i  } } \\cdot \\underset{ \\text{可見性} }{ \\underbrace{ V\\left(p ,,\\omega_i\\right)   } }  \\mathrm{d}\\omega_i \\<br>$$</p>\n<ul>\n<li>因為環境光照來自四面八方，所以如果把環境光照下的著色看作多光繪製（many-light rendering），則每一個光源都要生成一張陰影圖，那麼陰影圖的數量將極其龐大；</li>\n<li>如果把該問題看作抽樣問題，則環境光照的可見性項 $V$ 可能是任意複雜度，不能根據 split sum 方法估計積分結果；</li>\n<li>因為 $L_i\\left(p ,, \\omega_o\\right)$ 的支撐集是整個半球，而 BRDF $f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right)$ 可能並不平滑，於是 拆解出 $V$ 後，餘下的 $L_{i} \\left( p ,, \\omega_i \\right) f_{r}\\left( p ,, \\omega_i ,, \\omega_o \\right) \\cos\\theta_i$ 支撐集並不小，也可能並不平滑；</li>\n</ul>\n<p>目前，工業界的一般方案是選取環境中最亮的那個光源（例如太陽）或前幾個光源生成陰影圖，然後由此生成陰影，而學術界的一些相關研究如下：</p>\n<ul>\n<li>imperfect shadow maps；</li>\n<li>lightcuts；</li>\n<li>RTRT（real time ray tracing），可能是終極解決方案；</li>\n<li>PRT（precomputed radiance transfer）；</li>\n</ul>\n<h1 id=\"4-PRT（Precomputed-Radiance-Transfer，預計算輻射亮度傳輸）\"><a href=\"#4-PRT（Precomputed-Radiance-Transfer，預計算輻射亮度傳輸）\" class=\"headerlink\" title=\"4 PRT（Precomputed Radiance Transfer，預計算輻射亮度傳輸）\"></a>4 PRT（Precomputed Radiance Transfer，預計算輻射亮度傳輸）</h1><p>PRT（precomputed radiance transfer，預計算輻射亮度傳輸）的核心思想是假設場景中的只有光照會發生變化，將繪製方程的被積函數拆分成光照（lighting）和光線傳輸（light transport）這兩部分，並分別預計算兩者的紋理圖像，再把圖像從空間域轉換到頻域，最終把著色時繪製方程中的定積分計算轉換成向量的點積，或者轉換成向量與矩陣的乘法。</p>\n<p>PRT 效果示意 圖源：[GAMES202 閆令琪]<br><img src=\"/project/pic/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202022-11-24%20150240.png\"></p>\n<h2 id=\"4-1-預計算光照（Lighting）和光線傳輸（Light-transport）\"><a href=\"#4-1-預計算光照（Lighting）和光線傳輸（Light-transport）\" class=\"headerlink\" title=\"4.1 預計算光照（Lighting）和光線傳輸（Light transport）\"></a>4.1 預計算光照（Lighting）和光線傳輸（Light transport）</h2><p>PRT 將繪製方程的被積函數拆分成光照（lighting）和光線傳輸（light transport）這兩部分，分別預計算而得到兩張紋理圖像：</p>\n<p>$$<br>\\begin{align} \\underset{ \\text{給定點的著色結果} }{ \\underbrace{ L_o \\left( \\omega_i \\right) } } &amp;&#x3D; \\int_{\\Omega^{+}}  \\underset{ \\text{光照} }{ \\underbrace{ L_{i} \\left( \\omega_i \\right)  } } \\cdot \\underset{ \\text{ BRDF} }{ \\underbrace{ f_{r}\\left(  \\omega_i ,, \\omega_o \\right)  \\cos\\theta_i  } } \\cdot \\underset{ \\text{可見性} }{ \\underbrace{ V\\left(\\omega_i\\right)   } }  \\mathrm{d}\\omega_i<br>\\end{align}<br>$$</p>\n<p>$$<br>\\begin{align}<br>&amp;&#x3D; \\int_{\\Omega^{+}}  \\underset{ \\text{光照} }{ \\underbrace{ L_{i} \\left( \\omega_i \\right)  } } \\cdot \\underset{ \\text{光線傳輸，記作 } T\\left(\\omega_i ,, \\omega_o \\right) }{ \\underbrace{ f_{r}\\left( \\omega_i ,, \\omega_o \\right)  \\cos\\theta_i V\\left(\\omega_i\\right)   } }  \\mathrm{d}\\omega_i \\end{align}<br>$$</p>\n<p>然後，把這兩個在空間域的圖像信號變換到頻域，表示成基本信號 $B_{i}\\left(\\omega_i\\right)$ 的線性組合：</p>\n<p>$$<br>\\begin{align} L_{i} \\left( \\omega_i \\right) &amp;&#x3D; \\sum_{p} \\underset{ \\text{光照系數} }{ \\underbrace{ l_p }} \\cdot \\underset{ \\text{基函數} }{ \\underbrace{ B_p \\left(\\omega_i\\right) }} \\end{align}<br>$$</p>\n<p>$$<br>\\begin{align}<br>T\\left(\\omega_i,, \\omega_o\\right) &amp;&#x3D; \\sum_{q} \\underset{ \\text{光線傳輸系數} }{ \\underbrace{ t_q \\left(\\omega_o\\right)  }} \\cdot \\underset{ \\text{基函數} }{ \\underbrace{ B_q\\left(\\omega_i\\right) }} \\end{align}<br>$$</p>\n<p>基本信號構成了正交函數系 $\\left{ B_{i}\\left(\\omega_i\\right) \\right}$ ，在空間域的圖像信號與各個基函數的點積運算可以得到該函數正交級數的各項係數：</p>\n<p>$$<br>l_p &#x3D;  \\int_{\\Omega^+} L_{i} \\left( \\omega_i \\right) , \\overline{B_p\\left(\\omega_i\\right)}  ,\\mathrm{d}\\omega_i \\ t_q \\left(\\omega_o\\right)  &#x3D;  \\int_{\\Omega^+} T \\left( \\omega_i ,, \\omega_o \\right) , \\overline{B_q\\left(\\omega_i\\right)}  ,\\mathrm{d}\\omega_i \\<br>$$</p>\n<ul>\n<li>推廣點積運算，兩個複變函數的點積是在給定區間上一個函數和另一個函數共軛的乘積的定積分。</li>\n</ul>\n<p>PRT 中選取 <strong>球諧函數（spherical harmonics，SH）</strong> 作為基函數進行變換。</p>\n<ul>\n<li>實時渲染中涉及的很多函數都是定義在球面上的函數，例如此處的 $L_{i} \\left( \\omega_i \\right)$ 和 $T\\left(\\omega_i\\right)$ 。對於這些函數，如果使用二維傅里葉變換，則在根據傅里葉係數及基函數於空間域中重建圖像信號函數時，定義域的球面上可能會出現一條“縫”，而定義在球面上的球諧函數不會；<ul>\n<li>可以把環境光照圖保存為立方體圖（cube map），然後對立方體每一個面的子圖單獨做變換；</li>\n</ul>\n</li>\n<li>另外，球諧函數還有一些其它的好處，例如可以快速地計算出旋轉光源後新的係數；</li>\n<li>對於球諧函數基函數，不僅 $\\int_{\\Omega} B_n\\left(\\omega\\right) ,B_m\\left(\\omega\\right) ,\\mathrm{d}\\omega &#x3D; 0$，而且 $\\int_{\\Omega} \\left[ B_n\\left(\\omega\\right) \\right]^2 ,\\mathrm{d}\\omega &#x3D; 1$ ，於是其構成的函數係是規范正交函數係；<br>為了更進一步地追求效率，可以在誤差允許的範圍內省略變換後頻域中那些繁雜的、描述細節的高頻成分，只保留低階的球諧函數。</li>\n</ul>\n<p>球諧函數適合描述漫反射這樣的低頻信息，而對於高頻信息，雖然也可以描述，但是需要用到比較高階的球諧函數，才能得到比較好的效果，開銷較高。於是一些研究嘗試使用其它的基函數進行變換，例如小波變換（wavelet transform）。</p>\n<p>描述高頻信息時需要用到比較高階的球諧函數才能得到比較好的效果 圖源：[GAMES202 閆令琪]<br><img src=\"/project/pic/v2-181d799ec01b463bd3b1448acbb05538_r.jpg\"></p>\n<h2 id=\"4-2-PRT-特殊材質\"><a href=\"#4-2-PRT-特殊材質\" class=\"headerlink\" title=\"4.2 PRT 特殊材質\"></a>4.2 PRT 特殊材質</h2><h3 id=\"4-2-1-PRT-Diffuse-Case\"><a href=\"#4-2-1-PRT-Diffuse-Case\" class=\"headerlink\" title=\"4.2.1 PRT Diffuse Case\"></a>4.2.1 PRT Diffuse Case</h3><p>對於朗伯模型描述的漫反射材質，它的 BRDF 是一個常數，而光線傳輸部分也與 ωo 無關：</p>\n<p>$$<br>f_{r}\\left(\\omega_i ,, \\omega_o \\right) &#x3D; \\rho \\ T\\left(\\omega_i ,, \\omega_o\\right) &#x3D; T\\left(\\omega_i\\right) \\<br>$$</p>\n<p>在繪製方程計算定積分時，BRDF 可以被拆解出來，可以理解為：</p>\n<p>$$<br>\\begin{align} L\\left( \\omega_o \\right)  &amp;&#x3D; \\int_{\\Omega^{+}}  L_{i} \\left( \\omega_i \\right) \\cdot f_{r}\\left( \\omega_i ,, \\omega_o \\right) \\cos\\theta_i V\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i<br>\\end{align}<br>$$</p>\n<p>$$<br>\\begin{align}<br>&amp;&#x3D; \\int_{\\Omega^{+}} \\sum_{p} \\left[l_p \\cdot B_p\\left(\\omega_i\\right)\\right] \\cdot \\rho \\cdot \\cos\\theta_i V\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i \\end{align}<br>$$</p>\n<p>$$<br>\\begin{align}<br>&amp;&#x3D; \\rho \\sum_{p} l_p  \\underset{ \\text{恰好是光線傳輸用球諧函數線性表示} }{ \\underbrace{ \\int_{\\Omega^{+}} B_p\\left(\\omega_i\\right) \\cdot \\cos\\theta_i V\\left(\\omega_i\\right)  ,\\mathrm{d}\\omega_i }}<br>\\end{align}<br>$$</p>\n<p>$$<br>\\begin{align}<br>&amp;&#x3D; \\rho \\sum_{p} l_p \\cdot T_p \\left(\\omega_i\\right) &#x3D; \\rho \\cdot\\begin{bmatrix} l_0 &amp; l_1 &amp; \\cdots l_p \\end{bmatrix} \\begin{bmatrix} T_0 \\left(\\omega_i\\right) &amp; T_1 \\left(\\omega_i\\right) &amp; \\cdots &amp; T_p \\left(\\omega_i\\right) \\end{bmatrix}^T \\end{align}<br>$$</p>\n<p>另一種理解方式：</p>\n<p>$$<br>\\begin{align} &amp;L\\left( \\omega_o \\right)  &#x3D; \\int_{\\Omega^{+}}  L_{i} \\left( \\omega_i \\right) \\cdot f_{r}\\left( \\omega_i ,, \\omega_o \\right) \\cos\\theta_i V\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i \\ &amp;\\quad\\quad\\quad &#x3D; \\int_{\\Omega^{+}} \\sum_{p} \\left[l_p \\cdot B_p\\left(\\omega_i\\right)\\right] \\cdot \\sum_{q} \\left[t_q \\cdot B_q\\left(\\omega_i\\right)\\right] ,\\mathrm{d}\\omega_i \\ &amp;\\quad\\quad\\quad &#x3D; \\rho \\sum_{p} \\sum_{q} l_p \\cdot t_q \\cdot \\int_{\\Omega^{+}} B_p\\left(\\omega_i\\right) \\cdot B_q\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i \\ &amp;\\because \\int_{\\Omega^{+}} B_p\\left(\\omega_i\\right) \\cdot B_q\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i &#x3D; \\left{\\begin{array}{} 1 &amp; p &#x3D; q \\ 0 &amp; p \\ne q \\end{array}\\right. \\ &amp;\\therefore L\\left( \\omega_o \\right)  &#x3D; \\rho \\cdot \\sum_{k} l_k t_k \\quad\\quad \\color{Green}{k &#x3D; \\min\\left{ p ,, q \\right}} \\ &amp;\\quad\\quad\\quad\\quad,&#x3D; \\rho \\cdot\\begin{bmatrix} l_0 &amp; l_1 &amp; \\cdots l_k \\end{bmatrix} \\begin{bmatrix} t_0 &amp; t_1 &amp; \\cdots &amp; t_k \\end{bmatrix}^T \\end{align} \\<br>$$</p>\n<p>於是，對於漫反射材質景物表面，根據 PRT 著色表面某一點的運算過程被簡化成了向量的點積運算。</p>\n<ul>\n<li>對於漫反射，使用前三階的球諧函數便可以得到比較好的近似；</li>\n</ul>\n<h3 id=\"4-2-2-PRT-Glossy-Case\"><a href=\"#4-2-2-PRT-Glossy-Case\" class=\"headerlink\" title=\"4.2.2 PRT Glossy Case\"></a>4.2.2 PRT Glossy Case</h3><p>對於有光澤（glossy）材質的繪製方程，則有：</p>\n<p>$$<br>\\begin{align} L\\left( \\omega_o \\right)  &amp;&#x3D; \\int_{\\Omega^{+}}  L_{i} \\left( \\omega_i \\right) \\cdot f_{r}\\left( \\omega_i ,, \\omega_o \\right) \\cos\\theta_i V\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i \\ &amp;&#x3D; \\int_{\\Omega^{+}} \\sum_{p} \\left[l_p \\cdot B_p\\left(\\omega_i\\right)\\right] \\cdot f_{r}\\left( \\omega_i ,, \\omega_o \\right)  \\cos\\theta_i V\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i \\ &amp;&#x3D; \\sum_{p} l_p  \\underset{ \\text{恰好是光線傳輸用球諧函數線性表示} }{ \\underbrace{ \\int_{\\Omega^{+}} B_p\\left(\\omega_i\\right) \\cdot f_{r}\\left( \\omega_i ,, \\omega_o \\right) \\cos\\theta_i V\\left(\\omega_i\\right)  ,\\mathrm{d}\\omega_i }}  \\ &amp;&#x3D; \\sum_{p} l_p \\cdot T_i\\left( \\omega_i, \\omega_o \\right) \\ &amp;&#x3D;\\begin{bmatrix} l_0 &amp; l_1 &amp; \\cdots l_p \\end{bmatrix} \\begin{bmatrix} T_0 \\left(\\omega_i, \\omega_o\\right) &amp; T_1 \\left(\\omega_i, \\omega_o\\right) &amp; \\cdots &amp; T_p \\left(\\omega_i, \\omega_o\\right) \\end{bmatrix}^T \\end{align} \\<br>$$</p>\n<p>另一種理解方式：</p>\n<p>$$<br>\\begin{align} &amp;L\\left( \\omega_o \\right)  &#x3D; \\int_{\\Omega^{+}}  L_{i} \\left( \\omega_i \\right) \\cdot f_{r}\\left( \\omega_i ,, \\omega_o \\right) \\cos\\theta_i V\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i \\ &amp;\\quad\\quad\\quad &#x3D; \\int_{\\Omega^{+}} \\sum_{p} \\left[l_p \\cdot B_p\\left(\\omega_i\\right)\\right] \\cdot \\sum_{q} \\left[t_q\\left(\\omega_o\\right) \\cdot B_q\\left(\\omega_i\\right)\\right] ,\\mathrm{d}\\omega_i \\ &amp;\\quad\\quad\\quad &#x3D; \\sum_{p} \\sum_{q} l_p \\cdot t_q\\left(\\omega_o\\right) \\cdot \\int_{\\Omega^{+}} B_p\\left(\\omega_i\\right) \\cdot B_q\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i \\ &amp;\\because \\int_{\\Omega^{+}} B_p\\left(\\omega_i\\right) \\cdot B_q\\left(\\omega_i\\right) ,\\mathrm{d}\\omega_i &#x3D; \\left{\\begin{array}{} 1 &amp; p &#x3D; q \\ 0 &amp; p \\ne q \\end{array}\\right. \\ &amp;\\therefore L\\left( \\omega_o \\right)  &#x3D; \\sum_{k} l_k t_k\\left(\\omega_o\\right) \\quad\\quad \\color{Green}{k &#x3D; \\min\\left{ p ,, q \\right}} \\end{align} \\<br>$$</p>\n<p>繼續把係數 $t_k\\left(\\omega_o\\right)$ 基於規范正交函數係 $\\left{ B_{r}\\left(\\omega_o\\right) \\right}$ 展開成正交級數：</p>\n<p>光傳輸矩陣元素基函數<br>tk(ωo)&#x3D;∑rtk,r(ωo)⏟光傳輸矩陣元素⋅Br(ωo)⏟基函數</p>\n<p>$$<br>t_k\\left(\\omega_o\\right) &#x3D; \\sum_{r}   \\underset{ \\text{光傳輸矩陣元素} }{ \\underbrace{ t_{k,r} \\left(\\omega_o\\right)  }} \\cdot \\underset{ \\text{基函數} }{ \\underbrace{ B_{r}\\left(\\omega_o\\right) }} \\<br>$$</p>\n<p>於是有：</p>\n<p>$$<br>\\begin{align} L\\left( \\omega_o \\right) &amp;&#x3D; \\sum_{k} l_k t_k\\left(\\omega_o\\right) \\ &amp;&#x3D;  \\sum_{k} l_k \\sum_{r} t_{k,r} B_{r}\\left(\\omega_o\\right) \\ &amp;&#x3D; \\begin{bmatrix} l_0 &amp; l_1 &amp; \\cdots &amp; l_k \\end{bmatrix} \\begin{bmatrix} t_{0,0} &amp; t_{0,1} &amp; \\cdots &amp; t_{0,r} \\ t_{1,0} &amp; t_{1,1} &amp; \\cdots &amp; t_{1,r} \\ \\vdots &amp; \\vdots &amp;\\ddots &amp;\\vdots \\ t_{k,0} &amp; t_{k,1} &amp; \\cdots &amp; t_{k,r} \\ \\end{bmatrix} \\begin{bmatrix} B_{0}\\left(\\omega_o\\right) \\ B_{1}\\left(\\omega_o\\right) \\ \\vdots \\ B_{r}\\left(\\omega_o\\right) \\end{bmatrix} \\end{align} \\<br>$$</p>\n<p>於是，對於有光澤材質的景物表面，根據 PRT 著色表面某一點的運算過程被簡化成了向量和矩陣的乘法。</p>\n<ul>\n<li>有光澤的材質需要用到比漫反射更高階數的球諧函數；對於學術界，有時用到十階也仍覺得不夠；</li>\n</ul>\n<h1 id=\"5-Signed-Distance-Function-SDF\"><a href=\"#5-Signed-Distance-Function-SDF\" class=\"headerlink\" title=\"5 Signed Distance Function (SDF)\"></a>5 Signed Distance Function (SDF)</h1><ul>\n<li>Distance Function: 就是空間中任何一點，到某個物體的最小距離</li>\n<li>Signed: 就是加入規定負數代表在物體內部，正數則表示在物體外部。這樣不止定義了距離，還定義了方向</li>\n</ul>\n<h2 id=\"5-1-SDF-的應用\"><a href=\"#5-1-SDF-的應用\" class=\"headerlink\" title=\"5.1 SDF 的應用\"></a>5.1 SDF 的應用</h2><ol>\n<li>Ray Marching<ul>\n<li>以迭代方式遍歷射線，從而將每條射線有效地劃分為較小的射線段，並在每個步驟中對某些函數進行採樣</li>\n</ul>\n</li>\n<li>生成軟陰影</li>\n</ol>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><p>Karis B, Games E. <a href=\"https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf\">Real shading in unreal engine 4</a>[J]. Proc. Physically Based Shading Theory Practice, 2013, 4(3): 1.</p>\n","feature":null,"text":"實時環境光照：環境光照與預計算 環境光與Split Sum、PRT1 環境映射 Environment Mapping在《Real-Time Rendering 3rd》第八章 : Area and Environmental Lighting 中，介紹了 Environment...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"遊戲開發筆記","slug":"遊戲開發筆記","count":15,"path":"api/categories/遊戲開發筆記.json"}],"tags":[{"name":"Computer Graphic","slug":"Computer-Graphic","count":15,"path":"api/tags/Computer-Graphic.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AF%A6%E6%99%82%E7%92%B0%E5%A2%83%E5%85%89%E7%85%A7%EF%BC%9A%E7%92%B0%E5%A2%83%E5%85%89%E7%85%A7%E8%88%87%E9%A0%90%E8%A8%88%E7%AE%97-%E7%92%B0%E5%A2%83%E5%85%89%E8%88%87Split-Sum%E3%80%81PRT\"><span class=\"toc-text\">實時環境光照：環境光照與預計算 環境光與Split Sum、PRT</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E7%92%B0%E5%A2%83%E6%98%A0%E5%B0%84-Environment-Mapping\"><span class=\"toc-text\">1 環境映射 Environment Mapping</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-IBL%EF%BC%88Image-Based-Lighting%EF%BC%89\"><span class=\"toc-text\">1.1 IBL（Image-Based Lighting）</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-The-Split-Sum-Approximation\"><span class=\"toc-text\">2 The Split Sum Approximation</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-The-Split-Sum-%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%E7%A9%8D%E5%88%86\"><span class=\"toc-text\">2.1 The Split Sum 第一部分積分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-The-Split-Sum-%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%E7%A9%8D%E5%88%86\"><span class=\"toc-text\">2.2 The Split Sum 第二部分積分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E7%94%9A%E9%BA%BC%E6%98%AF-LTC-%E6%96%B9%E6%B3%95%EF%BC%88Linearly-Transformed-Cosines%EF%BC%89\"><span class=\"toc-text\">2.3 甚麼是 LTC 方法（Linearly Transformed Cosines）?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E7%94%9A%E9%BA%BC%E6%98%AF-%E7%9F%B3%E9%87%8C%E5%85%8B%E8%BF%91%E4%BC%BC%EF%BC%88Schlick%E2%80%99s-approximation%EF%BC%89\"><span class=\"toc-text\">2.4 甚麼是 石里克近似（Schlick’s approximation）?</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E7%92%B0%E5%A2%83%E5%85%89%E7%85%A7%E9%99%B0%E5%BD%B1\"><span class=\"toc-text\">3 環境光照陰影</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-PRT%EF%BC%88Precomputed-Radiance-Transfer%EF%BC%8C%E9%A0%90%E8%A8%88%E7%AE%97%E8%BC%BB%E5%B0%84%E4%BA%AE%E5%BA%A6%E5%82%B3%E8%BC%B8%EF%BC%89\"><span class=\"toc-text\">4 PRT（Precomputed Radiance Transfer，預計算輻射亮度傳輸）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E9%A0%90%E8%A8%88%E7%AE%97%E5%85%89%E7%85%A7%EF%BC%88Lighting%EF%BC%89%E5%92%8C%E5%85%89%E7%B7%9A%E5%82%B3%E8%BC%B8%EF%BC%88Light-transport%EF%BC%89\"><span class=\"toc-text\">4.1 預計算光照（Lighting）和光線傳輸（Light transport）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-PRT-%E7%89%B9%E6%AE%8A%E6%9D%90%E8%B3%AA\"><span class=\"toc-text\">4.2 PRT 特殊材質</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-1-PRT-Diffuse-Case\"><span class=\"toc-text\">4.2.1 PRT Diffuse Case</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-2-2-PRT-Glossy-Case\"><span class=\"toc-text\">4.2.2 PRT Glossy Case</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-Signed-Distance-Function-SDF\"><span class=\"toc-text\">5 Signed Distance Function (SDF)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-1-SDF-%E7%9A%84%E6%87%89%E7%94%A8\"><span class=\"toc-text\">5.1 SDF 的應用</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%83%E8%80%83\"><span class=\"toc-text\">參考</span></a></li></ol>","author":{"name":"tom_ci","slug":"blog-author","avatar":"https://cdn.discordapp.com/attachments/894788659356794880/1052779378314059846/AOh14GhDhRBs5Io0sk5AfsOAZLWzpaTSlQQbTaye9fiGhQs432-p-rw-no.png","link":"/","description":"tom_ci，也可以叫我CI，tom，ic，湯姆希艾或者是湯姆，艾希，Macau SMP現任群主。","socials":{"github":"https://github.com/tom-choi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/Ua2njAfQCN"}}}},"mapped":true,"prev_post":{"title":"實時渲染 3D空間GI的LPV算法和VXGI算法 SSAO算法","uid":"e01cf34c5024afe8c744ed5dbe78b0b8","slug":"GraphicQuest/GQ013 實時渲染4 3D空間GI的LPV算法和VXGI算法 SSAO算法","date":"2022-12-15T02:51:05.879Z","updated":"2022-12-14T14:53:34.318Z","comments":true,"path":"api/articles/GraphicQuest/GQ013 實時渲染4 3D空間GI的LPV算法和VXGI算法 SSAO算法.json","keywords":null,"cover":"https://cdn.discordapp.com/attachments/1032336370422784020/1041948898450743307/unknown.png","text":"實時渲染 3D空間GI的LPV算法和VXGI算法 SSAO算法全局光照，(Global Illumination,簡稱 GI)或被稱為Indirect Illumination, 間接光照，是指既考慮場景中直接來自光源的光照（Direct Light）又考慮經過場景中其他物體反射...","link":"","photos":[],"count_time":{"symbolsCount":335,"symbolsTime":"1 mins."},"categories":[{"name":"遊戲開發筆記","slug":"遊戲開發筆記","count":15,"path":"api/categories/遊戲開發筆記.json"}],"tags":[{"name":"Computer Graphic","slug":"Computer-Graphic","count":15,"path":"api/tags/Computer-Graphic.json"}],"author":{"name":"tom_ci","slug":"blog-author","avatar":"https://cdn.discordapp.com/attachments/894788659356794880/1052779378314059846/AOh14GhDhRBs5Io0sk5AfsOAZLWzpaTSlQQbTaye9fiGhQs432-p-rw-no.png","link":"/","description":"tom_ci，也可以叫我CI，tom，ic，湯姆希艾或者是湯姆，艾希，Macau SMP現任群主。","socials":{"github":"https://github.com/tom-choi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/Ua2njAfQCN"}}}},"feature":null},"next_post":{"title":"實現Flowmap","uid":"791f4797b9f7bc6b1c27dbd08f25dd4c","slug":"GraphicQuest/GQ011 實現Flowmap","date":"2022-12-15T02:51:05.867Z","updated":"2022-12-14T14:53:23.944Z","comments":true,"path":"api/articles/GraphicQuest/GQ011 實現Flowmap.json","keywords":null,"cover":"https://cdn.discordapp.com/attachments/1032335453988335676/1051508858461364335/asia_genshin___1638974304_abc02fc9_progressive.jpg","text":"1.實現Flowmap甚麼是Flowmap? 實際上可以理解成擁有流動材質的貼圖技術 實際流程 (簡單版): 下載Flowmap Painter, 地址 下載以後，軟件會自帶一張水貼圖，以及可調整的向量場界面，嘗試一下軟件功能，繪製 Flowmap 最後按下 “bake” 功能鍵...","link":"","photos":[],"count_time":{"symbolsCount":773,"symbolsTime":"1 mins."},"categories":[{"name":"遊戲開發筆記","slug":"遊戲開發筆記","count":15,"path":"api/categories/遊戲開發筆記.json"}],"tags":[{"name":"Computer Graphic","slug":"Computer-Graphic","count":15,"path":"api/tags/Computer-Graphic.json"}],"author":{"name":"tom_ci","slug":"blog-author","avatar":"https://cdn.discordapp.com/attachments/894788659356794880/1052779378314059846/AOh14GhDhRBs5Io0sk5AfsOAZLWzpaTSlQQbTaye9fiGhQs432-p-rw-no.png","link":"/","description":"tom_ci，也可以叫我CI，tom，ic，湯姆希艾或者是湯姆，艾希，Macau SMP現任群主。","socials":{"github":"https://github.com/tom-choi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/Ua2njAfQCN"}}}},"feature":null}}