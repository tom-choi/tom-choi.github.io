{"title":"傳統光照模型詳解","uid":"a993952f98b295ed6db3d1a544a2ca1d","slug":"GraphicQuest/GQ004 傳統光照模型詳解","date":"2022-12-14T14:00:28.000Z","updated":"2022-12-14T14:56:51.710Z","comments":true,"path":"api/articles/GraphicQuest/GQ004 傳統光照模型詳解.json","keywords":null,"cover":"https://cdn.discordapp.com/attachments/1032335453988335676/1042735649947656212/FQN1S51VgAMsSZa.jpg","content":"<h1 id=\"傳統光照模型詳解\"><a href=\"#傳統光照模型詳解\" class=\"headerlink\" title=\"傳統光照模型詳解\"></a>傳統光照模型詳解</h1><p>光照模型分類:</p>\n<ul>\n<li>基於物理的光照模型（PBR）（有可依據的公式）</li>\n<li>經驗模型（近似、模擬）</li>\n</ul>\n<p>局部光照的定義:<br>只考慮光源的影響，不考慮光線多次反射</p>\n<p>（對應的概念：全局光照&#x3D;直接光照+間接光照）</p>\n<p>局部光照模型內容的分類:</p>\n<p>局部光照模型滿足疊加原理，可分為四個部分:</p>\n<ul>\n<li>漫反射項 $C_{diffuse}$</li>\n<li>高光項 $C_{specular}$</li>\n<li>環境光項 $C_{ambient}$</li>\n<li>自發光</li>\n</ul>\n<p>你可以理解成Photoshop中圖層1,圖層2,…,圖層4疊加而成的光照模型</p>\n<h1 id=\"漫反射-C-diffuse\"><a href=\"#漫反射-C-diffuse\" class=\"headerlink\" title=\"漫反射 $C_{diffuse}$\"></a>漫反射 $C_{diffuse}$</h1><p>光會被均勻的反射到不同的方向</p>\n<p>漫反射過程中，光線發生了吸收和散射，所以顏色和方向發生了改變</p>\n<h2 id=\"Lambert餘弦定律：\"><a href=\"#Lambert餘弦定律：\" class=\"headerlink\" title=\"Lambert餘弦定律：\"></a>Lambert餘弦定律：</h2><p>$C_{diffuse} &#x3D; C_{light} * m_{diffuse} * dot(normal,L)$</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>$C_{light}$ 光源強度和顏色</p>\n<p>$m_{diffuse}$ 材質的漫反射率</p>\n<p>$dot(normal,L)$ 物體表面法線和入射光線的點乘</p></blockquote>\n<h1 id=\"高光-x2F-鏡面反射-C-specular\"><a href=\"#高光-x2F-鏡面反射-C-specular\" class=\"headerlink\" title=\"高光&#x2F;鏡面反射 $C_{specular}$\"></a>高光&#x2F;鏡面反射 $C_{specular}$</h1><p>$C_{specular} &#x3D; C_{light} * m_{specular} * dot(v,r)^{m_{gloss}}$</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>$C_{light}$ 光源強度和顏色 * dot(v,r)^{m_{gloss}}$</p>\n<p>$m_{specular}$ 材質的高光&#x2F;鏡面反射率</p>\n<p>$dot(v,r)$ 視角方向和反射方向的點乘 (v為視角方向，r為反射方向)</p>\n<p>$m_{gloss}$ 材質的光澤度</p></blockquote>\n<h1 id=\"環境光-C-ambient\"><a href=\"#環境光-C-ambient\" class=\"headerlink\" title=\"環境光 $C_{ambient}$\"></a>環境光 $C_{ambient}$</h1><p>假設模型在場景中發生多次散射和反射，並均等地射向物體表面</p>\n<p>$C_{ambient} &#x3D; Albedo * Ambient_{light}$</p>\n<p>通常使用的公式:</p>\n<p>$C_{ambient} &#x3D; A_{light} * m_{diffuse}$</p>\n<h1 id=\"自發光\"><a href=\"#自發光\" class=\"headerlink\" title=\"自發光\"></a>自發光</h1><p>由模型自行發出的光，通常直接使用一張發光貼圖來描述自發光</p>\n<p>發光貼圖的製作可以使用剛剛以上的生成公式 + 一張你喜歡貼圖，達到發光的效果</p>\n<h1 id=\"Lambert-模型\"><a href=\"#Lambert-模型\" class=\"headerlink\" title=\"Lambert 模型\"></a>Lambert 模型</h1><p>只使用Lambert餘弦定律來構造的模型</p>\n<h2 id=\"成品\"><a href=\"#成品\" class=\"headerlink\" title=\"成品:\"></a>成品:</h2><p>$Color &#x3D; C_{light} * m_{diffuse} * dot(normal,L)$</p>\n<h1 id=\"Phong-模型\"><a href=\"#Phong-模型\" class=\"headerlink\" title=\"Phong 模型\"></a>Phong 模型</h1><p>$C_{ambient} &#x3D; Albedo * Ambient_{light}$</p>\n<p>$C_{diffuse} &#x3D; C_{light} * m_{diffuse} * dot(normal,L)$</p>\n<p>$C_{specular} &#x3D; C_{light} * m_{specular} * dot(v,r)^{m_{gloss}}$</p>\n<h2 id=\"成品-1\"><a href=\"#成品-1\" class=\"headerlink\" title=\"成品:\"></a>成品:</h2><p>$Color &#x3D; C_{ambient} + C_{diffuse} + C_{specular}$</p>\n<h2 id=\"Phong-模型-附自發光-完整流程圖\"><a href=\"#Phong-模型-附自發光-完整流程圖\" class=\"headerlink\" title=\"Phong 模型 (附自發光) 完整流程圖\"></a>Phong 模型 (附自發光) 完整流程圖</h2><p><img src=\"/project/pic/imagegenerate.png\"></p>\n<p>Unity Shader</p>\n<pre class=\"line-numbers language-Shader\" data-language=\"Shader\"><code class=\"language-Shader\">Shader &quot;Custom&#x2F;NewSurfaceShader&quot;\n&#123;\n    Properties\n    &#123;\n        _Diffuse(&quot;Diffuse&quot;,color) &#x3D; (1,1,1,1)\n        _Specular(&quot;Specular&quot;,color) &#x3D; (1,1,1,1)\n        _Gloss(&quot;Gloss&quot;,Range(1.0,255)) &#x3D; 20\n        [KeywordEnum(LAMBERT,PH0NG,BLINNN_PH0NG)] _MODE(&quot;MODE&quot;,float) &#x3D; 0\n    &#125;\n    SubShader\n    &#123;\n        Pass\n        &#123;\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            &#x2F;&#x2F;shader_feature\n            #pragma multi_compile _MODE_LAMBERT _MODE_PH0NG _MODE_BLINNN_PH0NG\n\n\n            #include &quot;UnityCG.cginc&quot;\n            #include &quot;Lighting.cginc&quot;\n            #include &quot;AutoLight.cginc&quot;\n\n            struct appdata\n            &#123;\n                float4 vertex : POSITION;\n                float2 uv : TEXCOORD0;\n                float3 normal : NORMAL;\n            &#125;;\n\n            struct v2f\n            &#123;\n                float2 uv : TEXCOORD0;\n                float4 vertex : SV_POSITION;\n                float3 normalDir : TEXCOORD1;\n            &#125;;\n\n            v2f vert (appdata v)\n            &#123;\n                v2f o;\n                o.vertex &#x3D; UnityObjectToClipPos(v.vertex);\n                o.uv &#x3D; v.uv;\n\n                &#x2F;&#x2F; 將物體法線從物體坐標系轉換到世界坐標系\n                o.normalDir &#x3D; UnityObjectToWorldNormal(v.normal);\n                return o;\n            &#125;\n\n            float4 _Diffuse;\n            float4 _Specular;\n            float _Gloss;\n\n            fixed4 frag (v2f i) : SV_Target\n            &#123;\n                &#x2F;&#x2F; 法線方向\n                float3 normalDirection &#x3D; normalize(i.normalDir);\n                &#x2F;&#x2F; 燈光方向\n                float lightDirection &#x3D; normalize(_WorldSpaceLightPos0.xyz);\n                &#x2F;&#x2F; 基於蘭伯特模型計算燈光\n                float NdotL &#x3D; max(0,dot(normalDirection,lightDirection)); \n                &#x2F;&#x2F; 燈光顏色\n                float3 lightColor &#x3D; _LightColor0.rgb;\n\n\n                &#x2F;&#x2F; 漫反射&#x2F;方向光\n                float3 diffuse &#x3D; lightColor * _Diffuse.rgb * NdotL;\n\n                &#x2F;&#x2F; 計算燈光衰減\n                &#x2F;&#x2F;float attenuation &#x3D; LIGHT_ATTENUATION(i);\n                &#x2F;&#x2F;float3 attenColor &#x3D; attenuation * _LightColor0.xyz;\n\n                &#x2F;&#x2F; 燈光與材質球表面顏色進行作用\n                &#x2F;&#x2F;float3 texColor &#x3D; tex2D(_MainTex, i.uv).rgb;\n                &#x2F;&#x2F;float3 diffuseColor &#x3D; texColor *(directionDiffuse+inDirectionDiffuse);\n\n                &#x2F;&#x2F; LAMBERT 模型 (只有漫反射)\n                #if defined(_MODE_LAMBERT)\n                    float3 Color &#x3D; diffuse;\n                &#x2F;&#x2F; PHONG 模型 (環境光 + 漫反射 + 高光反射)\n                #elif defined(_MODE_PH0NG)\n                    &#x2F;&#x2F; 環境光  \n                    float3 ambient &#x3D; float3(0,0,0)+UNITY_LIGHTMODEL_AMBIENT.rgb;\n                    &#x2F;&#x2F; 高光反射\n                    &#x2F;&#x2F; 反射光方向 \n                    float3 reflectDir &#x3D; normalize(reflect(lightDirection,normalDirection));\n                    &#x2F;&#x2F; 視角方向\n                    float viewDir &#x3D; normalize(_WorldSpaceCameraPos.xyz - i.normalDir.xyz);\n                    &#x2F;&#x2F; 視角方向和反射光方向的點乘\n                    float vdotR &#x3D; max(0.0,dot(reflectDir,viewDir));\n                    &#x2F;&#x2F; 合成\n                    float specular &#x3D; _LightColor0.rgb * _Specular.rgb * pow(vdotR,_Gloss);\n                    \n                    float3 Color &#x3D; diffuse + ambient + specular;\n                &#x2F;&#x2F; BLINNN_PH0NG 模型 (高光反射使用半程向量)\n                #elif defined(_MODE_BLINNN_PH0NG)\n                    &#x2F;&#x2F; 環境光  \n                    float3 ambient &#x3D; float3(0,0,0)+UNITY_LIGHTMODEL_AMBIENT.rgb;\n                    &#x2F;&#x2F; 高光反射\n                    &#x2F;&#x2F; 視角方向\n                    float viewDir &#x3D; normalize(_WorldSpaceCameraPos.xyz - i.normalDir.xyz);\n                    &#x2F;&#x2F; 計算半角向量\n                    float3 halfDir &#x3D; normalize(lightDirection + viewDir);\n                    &#x2F;&#x2F; 半角向量和光線向量的點乘\n                    float NdotH &#x3D; saturate(dot(halfDir,normalDirection));\n                    &#x2F;&#x2F; 合成\n                    float specular &#x3D; _LightColor0.rgb * _Specular.rgb * pow(NdotH,_Gloss);\n                    \n                    float3 Color &#x3D; ambient + specular + diffuse;\n                #endif\n\n                float4 finalColor &#x3D; float4(Color,1);\n                return finalColor;\n            &#125;\n            ENDCG\n        &#125;\n    &#125;\n    FallBack &quot;Diffuse&quot;\n&#125;</code></pre>\n\n<h1 id=\"課外練習\"><a href=\"#課外練習\" class=\"headerlink\" title=\"課外練習\"></a>課外練習</h1><ol>\n<li>在Unity實現Phong 模型</li>\n<li>(提高) 完成 GAMES101 Homework3 的作業</li>\n</ol>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><p><a href=\"https://zhuanlan.zhihu.com/p/144331612\">https://zhuanlan.zhihu.com/p/144331612</a></p>\n","feature":null,"text":"傳統光照模型詳解光照模型分類: 基於物理的光照模型（PBR）（有可依據的公式） 經驗模型（近似、模擬） 局部光照的定義:只考慮光源的影響，不考慮光線多次反射 （對應的概念：全局光照&#x3D;直接光照+間接光照） 局部光照模型內容的分類: 局部光照模型滿足疊加原理，可分為四個部分...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"遊戲開發筆記","slug":"遊戲開發筆記","count":15,"path":"api/categories/遊戲開發筆記.json"}],"tags":[{"name":"Computer Graphic","slug":"Computer-Graphic","count":15,"path":"api/tags/Computer-Graphic.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%82%B3%E7%B5%B1%E5%85%89%E7%85%A7%E6%A8%A1%E5%9E%8B%E8%A9%B3%E8%A7%A3\"><span class=\"toc-text\">傳統光照模型詳解</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%BC%AB%E5%8F%8D%E5%B0%84-C-diffuse\"><span class=\"toc-text\">漫反射 $C_{diffuse}$</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lambert%E9%A4%98%E5%BC%A6%E5%AE%9A%E5%BE%8B%EF%BC%9A\"><span class=\"toc-text\">Lambert餘弦定律：</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%AB%98%E5%85%89-x2F-%E9%8F%A1%E9%9D%A2%E5%8F%8D%E5%B0%84-C-specular\"><span class=\"toc-text\">高光&#x2F;鏡面反射 $C_{specular}$</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%92%B0%E5%A2%83%E5%85%89-C-ambient\"><span class=\"toc-text\">環境光 $C_{ambient}$</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%87%AA%E7%99%BC%E5%85%89\"><span class=\"toc-text\">自發光</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lambert-%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">Lambert 模型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%90%E5%93%81\"><span class=\"toc-text\">成品:</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Phong-%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">Phong 模型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%90%E5%93%81-1\"><span class=\"toc-text\">成品:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Phong-%E6%A8%A1%E5%9E%8B-%E9%99%84%E8%87%AA%E7%99%BC%E5%85%89-%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B%E5%9C%96\"><span class=\"toc-text\">Phong 模型 (附自發光) 完整流程圖</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AA%B2%E5%A4%96%E7%B7%B4%E7%BF%92\"><span class=\"toc-text\">課外練習</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%83%E8%80%83\"><span class=\"toc-text\">參考</span></a></li></ol>","author":{"name":"tom_ci","slug":"blog-author","avatar":"https://cdn.discordapp.com/attachments/894788659356794880/1052779378314059846/AOh14GhDhRBs5Io0sk5AfsOAZLWzpaTSlQQbTaye9fiGhQs432-p-rw-no.png","link":"/","description":"tom_ci，也可以叫我CI，tom，ic，湯姆希艾或者是湯姆，艾希，Macau SMP現任群主。","socials":{"github":"https://github.com/tom-choi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/Ua2njAfQCN"}}}},"mapped":true,"prev_post":{"title":"HLSL 入門和基本函數","uid":"364a4cad820c2b7aa61aea1e7f6bce5d","slug":"GraphicQuest/GQ003 HLSL入門和基本函數","date":"2022-12-14T14:00:28.000Z","updated":"2022-12-14T16:27:39.291Z","comments":true,"path":"api/articles/GraphicQuest/GQ003 HLSL入門和基本函數.json","keywords":null,"cover":"https://cdn.discordapp.com/attachments/1032335453988335676/1042702739274203168/20221105_194029.jpg","text":"HLSL 入門和基本函數什麼是HLSL？ 高階著色器語言（High Level Shader Language，簡稱HLSL），就是用來編寫shader的一種語言 類似的語言還有： CG它是由NVIDIA公司所開發的，基於C語言同時被OpenGL和Direct3D所支持的開發語言...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"遊戲開發筆記","slug":"遊戲開發筆記","count":15,"path":"api/categories/遊戲開發筆記.json"}],"tags":[{"name":"Computer Graphic","slug":"Computer-Graphic","count":15,"path":"api/tags/Computer-Graphic.json"}],"author":{"name":"tom_ci","slug":"blog-author","avatar":"https://cdn.discordapp.com/attachments/894788659356794880/1052779378314059846/AOh14GhDhRBs5Io0sk5AfsOAZLWzpaTSlQQbTaye9fiGhQs432-p-rw-no.png","link":"/","description":"tom_ci，也可以叫我CI，tom，ic，湯姆希艾或者是湯姆，艾希，Macau SMP現任群主。","socials":{"github":"https://github.com/tom-choi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/Ua2njAfQCN"}}}},"feature":null},"next_post":{"title":"相機與透鏡","uid":"b289c42ae875c6d0fcba6aac91ffcfc9","slug":"GraphicQuest/GQ008 相機與透鏡","date":"2022-12-14T14:00:28.000Z","updated":"2022-12-14T14:55:07.453Z","comments":true,"path":"api/articles/GraphicQuest/GQ008 相機與透鏡.json","keywords":null,"cover":"https://cdn.discordapp.com/attachments/1032335453988335676/1048076626828742726/unknown.png","text":"1.1 相機與透鏡成像的背後都需要拍照，無論是光柵化還是光線追蹤，用合成的方法來生成光，最後使用一台相機來捕捉光 因此，成像 &#x3D; 合成光 + 捕捉光 2.1 相機的組成Pinholes &amp; Lenses form image on Sensor (小孔成像) 快...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"遊戲開發筆記","slug":"遊戲開發筆記","count":15,"path":"api/categories/遊戲開發筆記.json"}],"tags":[{"name":"Computer Graphic","slug":"Computer-Graphic","count":15,"path":"api/tags/Computer-Graphic.json"}],"author":{"name":"tom_ci","slug":"blog-author","avatar":"https://cdn.discordapp.com/attachments/894788659356794880/1052779378314059846/AOh14GhDhRBs5Io0sk5AfsOAZLWzpaTSlQQbTaye9fiGhQs432-p-rw-no.png","link":"/","description":"tom_ci，也可以叫我CI，tom，ic，湯姆希艾或者是湯姆，艾希，Macau SMP現任群主。","socials":{"github":"https://github.com/tom-choi","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"discord":{"icon":"/svg/discord.svg","link":"https://discord.gg/Ua2njAfQCN"}}}},"feature":null}}